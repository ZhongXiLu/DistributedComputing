version: '3.3'

networks:
  mynetwork:
    driver: bridge

services:

  frontend:
    image: frontend:latest
    build:
      context: ./services/frontend
      dockerfile: Dockerfile-dev
    volumes:
      - './services/frontend:/usr/src/app'
    ports:
      - 4200:4200
    networks:
      - mynetwork

  users:
    image: users:latest
    build:
      context: ./services/users
      dockerfile: Dockerfile-dev
    volumes:
      - './services/users:/usr/src/app'
    ports:
      - 5001:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
    depends_on:
      - users-db
    networks:
      - mynetwork

  users-db:
    image: users-db:latest
    build:
      context: ./services/users/project/db
      dockerfile: Dockerfile
    ports:
      - 5435:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  authentication:
    image: authentication:latest
    build:
      context: ./services/authentication
      dockerfile: Dockerfile-dev
    volumes:
      - './services/authentication:/usr/src/app'
    ports:
      - 5004:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@users-db:5432/users_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@users-db:5432/users_test
    networks:
      - mynetwork

  authentication-db:
    image: authentication-db:latest
    build:
      context: ./services/authentication/project/db
      dockerfile: Dockerfile
    ports:
      - 5438:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  post:
    image: post:latest
    build:
      context: ./services/post
      dockerfile: Dockerfile-dev
    volumes:
      - './services/post:/usr/src/app'
    ports:
      - 5002:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@posts-db:5432/posts_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@posts-db:5432/posts_test
    depends_on:
      - posts-db
    networks:
      - mynetwork

  posts-db:
    image: posts-db:latest
    build:
      context: ./services/post/project/db
      dockerfile: Dockerfile
    ports:
      - 5436:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  newsfeed:
    image: newsfeed:latest
    build:
      context: ./services/newsfeed
      dockerfile: Dockerfile-dev
    volumes:
      - './services/newsfeed:/usr/src/app'
    ports:
      - 5007:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
    networks:
      - mynetwork

  tag:
    image: tag:latest
    build:
      context: ./services/tag
      dockerfile: Dockerfile-dev
    volumes:
      - './services/tag:/usr/src/app'
    ports:
      - 5003:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@tags-db:5432/tags_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@tags-db:5432/tags_test
    depends_on:
      - tags-db
    networks:
      - mynetwork

  tags-db:
    image: tags-db:latest
    build:
      context: ./services/tag/project/db
      dockerfile: Dockerfile
    ports:
      - 5437:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  like:
    image: like:latest
    build:
      context: ./services/like
      dockerfile: Dockerfile-dev
    volumes:
      - './services/like:/usr/src/app'
    ports:
      - 5005:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@likes-db:5432/likes_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@likes-db:5432/likes_test
    depends_on:
      - likes-db
    networks:
      - mynetwork

  likes-db:
    image: likes-db:latest
    build:
      context: ./services/like/project/db
      dockerfile: Dockerfile
    ports:
      - 5439:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  comment:
    image: comment:latest
    build:
      context: ./services/comment
      dockerfile: Dockerfile-dev
    volumes:
      - './services/comment:/usr/src/app'
    ports:
      - 5006:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@comments-db:5432/comments_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@comments-db:5432/comments_test
    depends_on:
      - comments-db
    networks:
      - mynetwork

  comments-db:
    image: comments-db:latest
    build:
      context: ./services/comment/project/db
      dockerfile: Dockerfile
    ports:
      - 5440:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  anti-cyberbullying:
    image: anti-cyberbullying:latest
    build:
      context: ./services/anti-cyberbullying
      dockerfile: Dockerfile-dev
    volumes:
      - './services/anti-cyberbullying:/usr/src/app'
    ports:
      - 5008:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@badwords-db:5432/badwords_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@badwords-db:5432/badwords_test
    depends_on:
      - badwords-db
    networks:
      - mynetwork

  badwords-db:
    image: badwords-db:latest
    build:
      context: ./services/anti-cyberbullying/project/db
      dockerfile: Dockerfile
    ports:
      - 5441:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  ad:
    image: ad:latest
    build:
      context: ./services/ad
      dockerfile: Dockerfile-dev
    volumes:
      - './services/ad:/usr/src/app'
    ports:
      - 5009:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@ads-db:5432/ads_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@ads-db:5432/ads_test
    depends_on:
      - ads-db
    networks:
      - mynetwork

  ads-db:
    image: ads-db:latest
    build:
      context: ./services/ad/project/db
      dockerfile: Dockerfile
    ports:
      - 5442:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  notification:
    image: notification:latest
    build:
      context: ./services/notification
      dockerfile: Dockerfile-dev
    volumes:
      - './services/notification:/usr/src/app'
    ports:
      - 5010:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@notifications-db:5432/notifications_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@notifications-db:5432/notifications_test
    depends_on:
      - notifications-db
    networks:
      - mynetwork

  notifications-db:
    image: notifications-db:latest
    build:
      context: ./services/notification/project/db
      dockerfile: Dockerfile
    ports:
      - 5443:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  follow:
    image: follow:latest
    build:
      context: ./services/follow
      dockerfile: Dockerfile-dev
    volumes:
      - './services/follow:/usr/src/app'
    ports:
      - 5011:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@notifications-db:5432/notifications_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@notifications-db:5432/notifications_test
    networks:
      - mynetwork

  follow-db:
    image: follow-db:latest
    build:
      context: ./services/follow/project/db
      dockerfile: Dockerfile
    ports:
      - 5444:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  friend:
    image: friend:latest
    build:
      context: ./services/friend
      dockerfile: Dockerfile-dev
    volumes:
      - './services/friend:/usr/src/app'
    ports:
      - 5012:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@notifications-db:5432/notifications_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@notifications-db:5432/notifications_test
    networks:
      - mynetwork

  friends-db:
    image: friends-db:latest
    build:
      context: ./services/friend/project/db
      dockerfile: Dockerfile
    ports:
      - 5445:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  message:
    image: message:latest
    build:
      context: ./services/message
      dockerfile: Dockerfile-dev
    volumes:
      - './services/message:/usr/src/app'
    ports:
      - 5013:5000
    environment:
      - FLASK_ENV=development
      - APP_SETTINGS=project.config.DevelopmentConfig
      - DATABASE_URL=postgres://postgres:postgres@notifications-db:5432/notifications_dev
      - DATABASE_TEST_URL=postgres://postgres:postgres@notifications-db:5432/notifications_test
    networks:
      - mynetwork

  messages-db:
    image: messages-db:latest
    build:
      context: ./services/message/project/db
      dockerfile: Dockerfile
    ports:
      - 5446:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    networks:
      - mynetwork

  poll:
    image: poll:latest
    build:
      context: ./services/poll
      dockerfile: Dockerfile-dev
    volumes:
      - './services/poll:/usr/src/app'
    ports:
      - 5014:5000
    networks:
      - mynetwork
